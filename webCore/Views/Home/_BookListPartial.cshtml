@model List<webCore.Models.Product_admin>
    <div class="d-flex justify-content-between mb-3">
        <button id="sortDiscountBtn" class="btn btn-primary">Khuyến mãi</button>
        <select id="sortPriceSelect" class="form-select w-auto">
            <option value="none">Sắp xếp giá</option>
            <option value="asc">Giá tăng dần</option>
            <option value="desc">Giá giảm dần</option>
        </select>
    </div>
    <script>
        function loadProductsByCategoryId(categoryId, sortOrder = "none", filterByDiscount = false) {
            fetch(`/Home/GetProductsByCategoryId?categoryId=${categoryId}&sortOrder=${sortOrder}&filterByDiscount=${filterByDiscount}`)
                .then(response => response.text())
                .then(html => {
                    document.querySelector('.product-list').innerHTML = html;
                })
                .catch(error => console.error('Error loading products:', error));
        }

        // Gán sự kiện khi phần partial được render
        document.addEventListener("DOMContentLoaded", function () {
            const sortPriceSelect = document.getElementById("sortPriceSelect");
            const sortDiscountBtn = document.getElementById("sortDiscountBtn");
            const productRow = document.getElementById("productRow");

            if (sortPriceSelect && sortDiscountBtn && productRow) {
                // Thay đổi sắp xếp giá
                sortPriceSelect.addEventListener("change", function (e) {
                    const sortOrder = e.target.value;
                    const categoryId = productRow.getAttribute("data-category-id");
                    loadProductsByCategoryId(categoryId, sortOrder);
                });

                // Sắp xếp theo khuyến mãi
                sortDiscountBtn.addEventListener("click", function () {
                    const categoryId = productRow.getAttribute("data-category-id");
                    loadProductsByCategoryId(categoryId, "none", true);
                });
            }
        });
    </script>
    <!-- Danh sách sản phẩm -->
    <div class="row" id="productRow">
        @if (Model != null && Model.Any())
        {
            foreach (var product in Model)
            {
<div class="col-md-4 mb-3 product-item" data-price="@product.Price" data-discount="@product.DiscountPercentage">
    <div class="card">
        <a href="@Url.Action(" DetailProduct", "DetailProduct" , new { id=product.Id })">
            <img src="@product.Image" class="card-img-top" alt="@product.Title" />
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
                <p class="card-text">
                    @if (product.DiscountPercentage > 0)
                    {
<span class="badge discount-badge">Giảm @product.DiscountPercentage%</span>
                        <br />
                                                <span class="text-muted old-price">@string.Format("{0:C}", product.Price)</span>
                                                                        <br />
                                                                                                <span class="price new-price">@string.Format("{0:C}", product.Price * (1 - product.DiscountPercentage / 100))</span> }
                                                                                                                    else
                                                                                                                    {
                                                                                                <span class="price normal-price">@string.Format("{0:C}", product.Price)</span>}
                </p>
            </div>
        </a>
    </div>
</div> }
            }
            else
            {
<div class="col-12 text-center">
    <p>Không có sản phẩm nào để hiển thị.</p>
</div>}
    </div>
